{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\NLW\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport axios from \"axios\";\nimport api from \"../../services/api\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedUf, setSelectedUf] = useState(\"0\");\n  const [selectedCity, setSelectedCity] = useState(\"0\");\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    whatsapp: \"\"\n  });\n  const [selectedItems, setSelectedItems] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  const history = useHistory();\n  useEffect(() => {\n    api.get(\"items\").then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\").then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    // Carregar as cidades sempre que a UF mudar\n    if (selectedUf === \"0\") return;\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected > -1) {\n      // Deselect\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      // Select\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    await api.post(\"points\", data);\n    hi;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 8\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 8\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 8\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 10\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 8\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 10\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"Selecione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 6\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? \"selected\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/mathe/Desktop/NLW/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedUf","setSelectedUf","selectedCity","setSelectedCity","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","formData","setFormData","name","email","whatsapp","selectedItems","setSelectedItems","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","history","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","post","hi","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from \"react\";\r\nimport \"./styles.css\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport api from \"../../services/api\";\r\nimport { LeafletMouseEvent } from \"leaflet\";\r\n\r\n// Sempre que criamos um estado pra um array ou obj: informar manualmente o tipo da variável\r\n\r\ninterface Item {\r\n\tid: number;\r\n\ttitle: string;\r\n\timage_url: string;\r\n}\r\n\r\ninterface ibgeUfResponse {\r\n\tsigla: string;\r\n}\r\n\r\ninterface ibgeCityResponse {\r\n\tnome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\tconst [ items, setItems ] = useState<Item[]>([]);\r\n\tconst [ ufs, setUfs ] = useState<string[]>([]);\r\n\tconst [ cities, setCities ] = useState<string[]>([]);\r\n\tconst [ selectedUf, setSelectedUf ] = useState(\"0\");\r\n\tconst [ selectedCity, setSelectedCity ] = useState(\"0\");\r\n\tconst [ initialPosition, setInitialPosition ] = useState<[number, number]>([0, 0]);\r\n\tconst [ selectedPosition, setSelectedPosition ] = useState<[number, number]>([0, 0]);\r\n\tconst [ formData, setFormData ] = useState({\r\n\t\tname: \"\",\r\n\t\temail: \"\",\r\n\t\twhatsapp: \"\"\r\n\t});\r\n\tconst [ selectedItems, setSelectedItems ] = useState<number[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.geolocation.getCurrentPosition( position => {\r\n\t\t\tconst { latitude, longitude } = position.coords;\r\n\t\t\tsetInitialPosition([latitude, longitude]);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst history = useHistory();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tapi.get(\"items\").then( response => {\r\n\t\t\tsetItems(response.data);\r\n\t\t});\r\n\t}, []);\r\n\t\r\n\tuseEffect(() => {\r\n\t\taxios.get<ibgeUfResponse[]>(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados\").then( response => {\r\n\t\t\tconst ufInitials = response.data.map(uf => uf.sigla);\r\n\t\t\tsetUfs(ufInitials);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Carregar as cidades sempre que a UF mudar\r\n\t\tif (selectedUf === \"0\") return;\r\n\t\taxios.get<ibgeCityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then( response => {\r\n\t\t\tconst cityNames = response.data.map( city => city.nome);\r\n\t\t\tsetCities(cityNames);\r\n\t\t});\r\n\t}, [selectedUf]);\r\n\r\n\tfunction handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n\t\tconst uf = event.target.value;\r\n\t\tsetSelectedUf(uf);\r\n\t}\r\n\r\n\tfunction handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n\t\tconst city = event.target.value;\r\n\t\tsetSelectedCity(city);\r\n\t}\r\n\r\n\tfunction handleMapClick(event: LeafletMouseEvent) {\r\n\t\tsetSelectedPosition([\r\n\t\t\tevent.latlng.lat,\r\n\t\t\tevent.latlng.lng\r\n\t\t]);\r\n\t}\r\n\r\n\tfunction handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetFormData({ ...formData, [name]: value });\r\n\t}\r\n\r\n\tfunction handleSelectItem(id: number) {\r\n\t\tconst alreadySelected = selectedItems.findIndex(item => item === id);\r\n\t\tif (alreadySelected > -1) { // Deselect\r\n\t\t\tconst filteredItems = selectedItems.filter(item => item !== id);\r\n\t\t\tsetSelectedItems(filteredItems);\r\n\t\t} else { // Select\r\n\t\t\tsetSelectedItems([ ...selectedItems, id ]);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleSubmit(event: FormEvent) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { name, email, whatsapp } = formData;\r\n\t\tconst uf = selectedUf;\r\n\t\tconst city = selectedCity;\r\n\t\tconst [ latitude, longitude ] = selectedPosition;\r\n\t\tconst items = selectedItems;\r\n\t\t\r\n\t\tconst data = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\twhatsapp,\r\n\t\t\tuf,\r\n\t\t\tcity,\r\n\t\t\tlatitude,\r\n\t\t\tlongitude,\r\n\t\t\titems\r\n\t\t};\r\n\t\tawait api.post(\"points\", data);\r\n\t\thi\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div id=\"page-create-point\">\r\n\t\t\t<header>\r\n\t\t\t\t<img src={logo} alt=\"Ecoleta\"/>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<FiArrowLeft />\r\n\t\t\t\t\tVoltar para home\r\n\t\t\t\t</Link>\r\n\t\t\t</header>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<h1>Cadastro do <br /> ponto de coleta</h1>\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>\r\n\t\t\t\t\t\t<h2>Dados</h2>\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Nome da entidade</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"field-group\">\r\n\t\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\">E-mail</label>\r\n\t\t\t\t\t\t\t<input type=\"email\" name=\"email\" id=\"email\" onChange={handleInputChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"whatsapp\">Whatsapp</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>\r\n\t\t\t\t\t\t<h2>Endereço</h2>\r\n\t\t\t\t\t\t<span>Selecione o endereço no mapa</span>\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t<Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n\t\t\t\t\t\t<TileLayer\r\n\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Marker position={selectedPosition} />\r\n\t\t\t\t\t</Map>\r\n\t\t\t\t\t<div className=\"field-group\">\r\n\t\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"uf\">Estado (UF)</label>\r\n\t\t\t\t\t\t\t<select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\r\n\t\t\t\t\t\t\t\t<option value=\"0\">Selecione uma UF</option>\r\n\t\t\t\t\t\t\t\t{ufs.map( uf => (\r\n\t\t\t\t\t\t\t\t\t<option key={uf} value={uf}>{uf}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"city\">Cidade</label>\r\n\t\t\t\t\t\t\t<select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity} >\r\n\t\t\t\t\t\t\t\t<option value=\"0\">Selecione uma cidade</option>\r\n\t\t\t\t\t\t\t\t{cities.map( city => (\r\n\t\t\t\t\t\t\t\t\t<option key={city} value={city}>{city}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>\r\n\t\t\t\t\t\t<h2>Ítens de coleta</h2>\r\n\t\t\t\t\t\t<span>Selecione um ou mais ítens abaixo</span>\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t<ul className=\"items-grid\">\r\n\t\t\t\t\t\t{items.map( item => (\r\n\t\t\t\t\t\t\t<li \r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\tonClick={() => handleSelectItem(item.id)}\r\n\t\t\t\t\t\t\t\tclassName={selectedItems.includes(item.id) ? \"selected\" : \"\"}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src={item.image_url} alt={item.title} />\r\n\t\t\t\t\t\t\t\t<span>{item.title}</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\tCadastrar ponto de coleta\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\t\r\n\t);\r\n};\r\n\t\r\nexport default CreatePoint;\r\n\t"]},"metadata":{},"sourceType":"module"}