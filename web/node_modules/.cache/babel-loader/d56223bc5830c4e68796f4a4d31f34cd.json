{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\NLW\\\\web\\\\src\\\\components\\\\Dropzone\\\\index.tsx\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./styles.css\";\nimport { FiUpload } from \"react-icons/fi\";\n\nconst Dropzone = () => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState(\"\");\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = URL.createObjectURL(file);\n    setSelectedFileUrl(fileUrl);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: \"image/*\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"dropzone\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })), selectedFileUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFileUrl,\n    alt: \"Point thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FiUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }\n  }), \"Imagem do estabelecimento.\"));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/mathe/Desktop/NLW/web/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","fileUrl","URL","createObjectURL","getRootProps","getInputProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,cAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMM,MAAM,GAAGP,WAAW,CAACQ,aAAa,IAAI;AAC1C,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAEA,UAAME,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAhB;AACAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACD,GALyB,EAKvB,EALuB,CAA1B;AAMA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCZ,WAAW,CAAC;AAClDK,IAAAA,MADkD;AAElDQ,IAAAA,MAAM,EAAE;AAF0C,GAAD,CAAnD;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BF,YAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEMT,eAAe,gBACX;AAAK,IAAA,GAAG,EAAEA,eAAV;AAA2B,IAAA,GAAG,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,+BAJV,CADF;AASD,CAvBD;;AAyBA,eAAeD,QAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./styles.css\";\r\nimport { FiUpload } from \"react-icons/fi\";\r\n\r\nconst Dropzone = () => {\r\n  const [selectedFileUrl, setSelectedFileUrl] = useState(\"\");\r\n  \r\n  const onDrop = useCallback(acceptedFiles => {\r\n    const file = acceptedFiles[0];\r\n\r\n    const fileUrl = URL.createObjectURL(file);\r\n    setSelectedFileUrl(fileUrl);\r\n  }, []);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/*\"\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} accept=\"image/*\" />\r\n        { selectedFileUrl\r\n            ? <img src={selectedFileUrl} alt=\"Point thumbnail\" />\r\n            : <p><FiUpload />Imagem do estabelecimento.</p>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropzone;\r\n"]},"metadata":{},"sourceType":"module"}